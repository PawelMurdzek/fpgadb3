# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.4.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _lxt
else:
    import _lxt

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class dslxt_tree_node(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    left = property(_lxt.dslxt_tree_node_left_get, _lxt.dslxt_tree_node_left_set)
    right = property(_lxt.dslxt_tree_node_right_get, _lxt.dslxt_tree_node_right_set)
    item = property(_lxt.dslxt_tree_node_item_get, _lxt.dslxt_tree_node_item_set)
    val = property(_lxt.dslxt_tree_node_val_get, _lxt.dslxt_tree_node_val_set)

    def __init__(self):
        _lxt.dslxt_tree_node_swiginit(self, _lxt.new_dslxt_tree_node())
    __swig_destroy__ = _lxt.delete_dslxt_tree_node

# Register dslxt_tree_node in _lxt:
_lxt.dslxt_tree_node_swigregister(dslxt_tree_node)
LT_HDRID = _lxt.LT_HDRID
LT_VERSION = _lxt.LT_VERSION
LT_TRLID = _lxt.LT_TRLID
LT_CLKPACK = _lxt.LT_CLKPACK
LT_CLKPACK_M = _lxt.LT_CLKPACK_M
LT_MVL_2 = _lxt.LT_MVL_2
LT_MVL_4 = _lxt.LT_MVL_4
LT_MVL_9 = _lxt.LT_MVL_9
LT_MINDICTWIDTH = _lxt.LT_MINDICTWIDTH
LT_ZMODE_NONE = _lxt.LT_ZMODE_NONE
LT_ZMODE_GZIP = _lxt.LT_ZMODE_GZIP
LT_ZMODE_BZIP2 = _lxt.LT_ZMODE_BZIP2
class lt_timetrail(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    next = property(_lxt.lt_timetrail_next_get, _lxt.lt_timetrail_next_set)
    timeval = property(_lxt.lt_timetrail_timeval_get, _lxt.lt_timetrail_timeval_set)
    position = property(_lxt.lt_timetrail_position_get, _lxt.lt_timetrail_position_set)

    def __init__(self):
        _lxt.lt_timetrail_swiginit(self, _lxt.new_lt_timetrail())
    __swig_destroy__ = _lxt.delete_lt_timetrail

# Register lt_timetrail in _lxt:
_lxt.lt_timetrail_swigregister(lt_timetrail)
LT_SYMPRIME = _lxt.LT_SYMPRIME
LT_SECTION_END = _lxt.LT_SECTION_END
LT_SECTION_CHG = _lxt.LT_SECTION_CHG
LT_SECTION_SYNC_TABLE = _lxt.LT_SECTION_SYNC_TABLE
LT_SECTION_FACNAME = _lxt.LT_SECTION_FACNAME
LT_SECTION_FACNAME_GEOMETRY = _lxt.LT_SECTION_FACNAME_GEOMETRY
LT_SECTION_TIMESCALE = _lxt.LT_SECTION_TIMESCALE
LT_SECTION_TIME_TABLE = _lxt.LT_SECTION_TIME_TABLE
LT_SECTION_INITIAL_VALUE = _lxt.LT_SECTION_INITIAL_VALUE
LT_SECTION_DOUBLE_TEST = _lxt.LT_SECTION_DOUBLE_TEST
LT_SECTION_TIME_TABLE64 = _lxt.LT_SECTION_TIME_TABLE64
LT_SECTION_ZFACNAME_PREDEC_SIZE = _lxt.LT_SECTION_ZFACNAME_PREDEC_SIZE
LT_SECTION_ZFACNAME_SIZE = _lxt.LT_SECTION_ZFACNAME_SIZE
LT_SECTION_ZFACNAME_GEOMETRY_SIZE = _lxt.LT_SECTION_ZFACNAME_GEOMETRY_SIZE
LT_SECTION_ZSYNC_SIZE = _lxt.LT_SECTION_ZSYNC_SIZE
LT_SECTION_ZTIME_TABLE_SIZE = _lxt.LT_SECTION_ZTIME_TABLE_SIZE
LT_SECTION_ZCHG_PREDEC_SIZE = _lxt.LT_SECTION_ZCHG_PREDEC_SIZE
LT_SECTION_ZCHG_SIZE = _lxt.LT_SECTION_ZCHG_SIZE
LT_SECTION_ZDICTIONARY = _lxt.LT_SECTION_ZDICTIONARY
LT_SECTION_ZDICTIONARY_SIZE = _lxt.LT_SECTION_ZDICTIONARY_SIZE
LT_SECTION_EXCLUDE_TABLE = _lxt.LT_SECTION_EXCLUDE_TABLE
class lt_trace(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    handle = property(_lxt.lt_trace_handle_get, _lxt.lt_trace_handle_set)
    zhandle = property(_lxt.lt_trace_zhandle_get, _lxt.lt_trace_zhandle_set)
    dict = property(_lxt.lt_trace_dict_get, _lxt.lt_trace_dict_set)
    mindictwidth = property(_lxt.lt_trace_mindictwidth_get, _lxt.lt_trace_mindictwidth_set)
    num_dict_entries = property(_lxt.lt_trace_num_dict_entries_get, _lxt.lt_trace_num_dict_entries_set)
    dict_string_mem_required = property(_lxt.lt_trace_dict_string_mem_required_get, _lxt.lt_trace_dict_string_mem_required_set)
    sorted_dict = property(_lxt.lt_trace_sorted_dict_get, _lxt.lt_trace_sorted_dict_set)
    dict16_offset = property(_lxt.lt_trace_dict16_offset_get, _lxt.lt_trace_dict16_offset_set)
    dict24_offset = property(_lxt.lt_trace_dict24_offset_get, _lxt.lt_trace_dict24_offset_set)
    dict32_offset = property(_lxt.lt_trace_dict32_offset_get, _lxt.lt_trace_dict32_offset_set)
    lt_emit_u8 = property(_lxt.lt_trace_lt_emit_u8_get, _lxt.lt_trace_lt_emit_u8_set)
    lt_emit_u16 = property(_lxt.lt_trace_lt_emit_u16_get, _lxt.lt_trace_lt_emit_u16_set)
    lt_emit_u24 = property(_lxt.lt_trace_lt_emit_u24_get, _lxt.lt_trace_lt_emit_u24_set)
    lt_emit_u32 = property(_lxt.lt_trace_lt_emit_u32_get, _lxt.lt_trace_lt_emit_u32_set)
    lt_emit_u64 = property(_lxt.lt_trace_lt_emit_u64_get, _lxt.lt_trace_lt_emit_u64_set)
    lt_emit_double = property(_lxt.lt_trace_lt_emit_double_get, _lxt.lt_trace_lt_emit_double_set)
    lt_emit_string = property(_lxt.lt_trace_lt_emit_string_get, _lxt.lt_trace_lt_emit_string_set)
    position = property(_lxt.lt_trace_position_get, _lxt.lt_trace_position_set)
    zfacname_predec_size = property(_lxt.lt_trace_zfacname_predec_size_get, _lxt.lt_trace_zfacname_predec_size_set)
    zfacname_size = property(_lxt.lt_trace_zfacname_size_get, _lxt.lt_trace_zfacname_size_set)
    zfacgeometry_size = property(_lxt.lt_trace_zfacgeometry_size_get, _lxt.lt_trace_zfacgeometry_size_set)
    zsync_table_size = property(_lxt.lt_trace_zsync_table_size_get, _lxt.lt_trace_zsync_table_size_set)
    ztime_table_size = property(_lxt.lt_trace_ztime_table_size_get, _lxt.lt_trace_ztime_table_size_set)
    zdictionary_size = property(_lxt.lt_trace_zdictionary_size_get, _lxt.lt_trace_zdictionary_size_set)
    zpackcount = property(_lxt.lt_trace_zpackcount_get, _lxt.lt_trace_zpackcount_set)
    zchg_table_size = property(_lxt.lt_trace_zchg_table_size_get, _lxt.lt_trace_zchg_table_size_set)
    chg_table_size = property(_lxt.lt_trace_chg_table_size_get, _lxt.lt_trace_chg_table_size_set)
    sym = property(_lxt.lt_trace_sym_get, _lxt.lt_trace_sym_set)
    sorted_facs = property(_lxt.lt_trace_sorted_facs_get, _lxt.lt_trace_sorted_facs_set)
    symchain = property(_lxt.lt_trace_symchain_get, _lxt.lt_trace_symchain_set)
    numfacs = property(_lxt.lt_trace_numfacs_get, _lxt.lt_trace_numfacs_set)
    numfacs_bytes = property(_lxt.lt_trace_numfacs_bytes_get, _lxt.lt_trace_numfacs_bytes_set)
    numfacbytes = property(_lxt.lt_trace_numfacbytes_get, _lxt.lt_trace_numfacbytes_set)
    longestname = property(_lxt.lt_trace_longestname_get, _lxt.lt_trace_longestname_set)
    mintime = property(_lxt.lt_trace_mintime_get, _lxt.lt_trace_mintime_set)
    maxtime = property(_lxt.lt_trace_maxtime_get, _lxt.lt_trace_maxtime_set)
    timescale = property(_lxt.lt_trace_timescale_get, _lxt.lt_trace_timescale_set)
    initial_value = property(_lxt.lt_trace_initial_value_get, _lxt.lt_trace_initial_value_set)
    timehead = property(_lxt.lt_trace_timehead_get, _lxt.lt_trace_timehead_set)
    timecurr = property(_lxt.lt_trace_timecurr_get, _lxt.lt_trace_timecurr_set)
    timebuff = property(_lxt.lt_trace_timebuff_get, _lxt.lt_trace_timebuff_set)
    timechangecount = property(_lxt.lt_trace_timechangecount_get, _lxt.lt_trace_timechangecount_set)
    dumpoffhead = property(_lxt.lt_trace_dumpoffhead_get, _lxt.lt_trace_dumpoffhead_set)
    dumpoffcurr = property(_lxt.lt_trace_dumpoffcurr_get, _lxt.lt_trace_dumpoffcurr_set)
    dumpoffcount = property(_lxt.lt_trace_dumpoffcount_get, _lxt.lt_trace_dumpoffcount_set)
    change_field_offset = property(_lxt.lt_trace_change_field_offset_get, _lxt.lt_trace_change_field_offset_set)
    facname_offset = property(_lxt.lt_trace_facname_offset_get, _lxt.lt_trace_facname_offset_set)
    facgeometry_offset = property(_lxt.lt_trace_facgeometry_offset_get, _lxt.lt_trace_facgeometry_offset_set)
    time_table_offset = property(_lxt.lt_trace_time_table_offset_get, _lxt.lt_trace_time_table_offset_set)
    sync_table_offset = property(_lxt.lt_trace_sync_table_offset_get, _lxt.lt_trace_sync_table_offset_set)
    initial_value_offset = property(_lxt.lt_trace_initial_value_offset_get, _lxt.lt_trace_initial_value_offset_set)
    timescale_offset = property(_lxt.lt_trace_timescale_offset_get, _lxt.lt_trace_timescale_offset_set)
    double_test_offset = property(_lxt.lt_trace_double_test_offset_get, _lxt.lt_trace_double_test_offset_set)
    dictionary_offset = property(_lxt.lt_trace_dictionary_offset_get, _lxt.lt_trace_dictionary_offset_set)
    exclude_offset = property(_lxt.lt_trace_exclude_offset_get, _lxt.lt_trace_exclude_offset_set)
    compress_fac_str = property(_lxt.lt_trace_compress_fac_str_get, _lxt.lt_trace_compress_fac_str_set)
    compress_fac_len = property(_lxt.lt_trace_compress_fac_len_get, _lxt.lt_trace_compress_fac_len_set)
    timeval = property(_lxt.lt_trace_timeval_get, _lxt.lt_trace_timeval_set)
    dumpoff_active = property(_lxt.lt_trace_dumpoff_active_get, _lxt.lt_trace_dumpoff_active_set)
    double_used = property(_lxt.lt_trace_double_used_get, _lxt.lt_trace_double_used_set)
    do_strip_brackets = property(_lxt.lt_trace_do_strip_brackets_get, _lxt.lt_trace_do_strip_brackets_set)
    clock_compress = property(_lxt.lt_trace_clock_compress_get, _lxt.lt_trace_clock_compress_set)
    dictmode = property(_lxt.lt_trace_dictmode_get, _lxt.lt_trace_dictmode_set)
    zmode = property(_lxt.lt_trace_zmode_get, _lxt.lt_trace_zmode_set)
    emitted = property(_lxt.lt_trace_emitted_get, _lxt.lt_trace_emitted_set)

    def __init__(self):
        _lxt.lt_trace_swiginit(self, _lxt.new_lt_trace())
    __swig_destroy__ = _lxt.delete_lt_trace

# Register lt_trace in _lxt:
_lxt.lt_trace_swigregister(lt_trace)
class lt_symbol(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    next = property(_lxt.lt_symbol_next_get, _lxt.lt_symbol_next_set)
    symchain = property(_lxt.lt_symbol_symchain_get, _lxt.lt_symbol_symchain_set)
    name = property(_lxt.lt_symbol_name_get, _lxt.lt_symbol_name_set)
    namlen = property(_lxt.lt_symbol_namlen_get, _lxt.lt_symbol_namlen_set)
    facnum = property(_lxt.lt_symbol_facnum_get, _lxt.lt_symbol_facnum_set)
    aliased_to = property(_lxt.lt_symbol_aliased_to_get, _lxt.lt_symbol_aliased_to_set)
    rows = property(_lxt.lt_symbol_rows_get, _lxt.lt_symbol_rows_set)
    msb = property(_lxt.lt_symbol_msb_get, _lxt.lt_symbol_msb_set)
    lsb = property(_lxt.lt_symbol_lsb_get, _lxt.lt_symbol_lsb_set)
    len = property(_lxt.lt_symbol_len_get, _lxt.lt_symbol_len_set)
    flags = property(_lxt.lt_symbol_flags_get, _lxt.lt_symbol_flags_set)
    last_change = property(_lxt.lt_symbol_last_change_get, _lxt.lt_symbol_last_change_set)
    clk_delta = property(_lxt.lt_symbol_clk_delta_get, _lxt.lt_symbol_clk_delta_set)
    clk_prevtrans = property(_lxt.lt_symbol_clk_prevtrans_get, _lxt.lt_symbol_clk_prevtrans_set)
    clk_numtrans = property(_lxt.lt_symbol_clk_numtrans_get, _lxt.lt_symbol_clk_numtrans_set)
    clk_prevval = property(_lxt.lt_symbol_clk_prevval_get, _lxt.lt_symbol_clk_prevval_set)
    clk_prevval1 = property(_lxt.lt_symbol_clk_prevval1_get, _lxt.lt_symbol_clk_prevval1_set)
    clk_prevval2 = property(_lxt.lt_symbol_clk_prevval2_get, _lxt.lt_symbol_clk_prevval2_set)
    clk_prevval3 = property(_lxt.lt_symbol_clk_prevval3_get, _lxt.lt_symbol_clk_prevval3_set)
    clk_prevval4 = property(_lxt.lt_symbol_clk_prevval4_get, _lxt.lt_symbol_clk_prevval4_set)
    clk_mask = property(_lxt.lt_symbol_clk_mask_get, _lxt.lt_symbol_clk_mask_set)

    def __init__(self):
        _lxt.lt_symbol_swiginit(self, _lxt.new_lt_symbol())
    __swig_destroy__ = _lxt.delete_lt_symbol

# Register lt_symbol in _lxt:
_lxt.lt_symbol_swigregister(lt_symbol)
LT_SYM_F_BITS = _lxt.LT_SYM_F_BITS
LT_SYM_F_INTEGER = _lxt.LT_SYM_F_INTEGER
LT_SYM_F_DOUBLE = _lxt.LT_SYM_F_DOUBLE
LT_SYM_F_STRING = _lxt.LT_SYM_F_STRING
LT_SYM_F_ALIAS = _lxt.LT_SYM_F_ALIAS

def lt_init(name):
    return _lxt.lt_init(name)

def lt_close(lt):
    return _lxt.lt_close(lt)

def lt_symbol_find(lt, name):
    return _lxt.lt_symbol_find(lt, name)

def lt_symbol_add(lt, name, rows, msb, lsb, flags):
    return _lxt.lt_symbol_add(lt, name, rows, msb, lsb, flags)

def lt_symbol_alias(lt, existing_name, alias, msb, lsb):
    return _lxt.lt_symbol_alias(lt, existing_name, alias, msb, lsb)

def lt_symbol_bracket_stripping(lt, doit):
    return _lxt.lt_symbol_bracket_stripping(lt, doit)

def lt_set_no_interlace(lt):
    return _lxt.lt_set_no_interlace(lt)

def lt_set_chg_compress(lt):
    return _lxt.lt_set_chg_compress(lt)

def lt_set_clock_compress(lt):
    return _lxt.lt_set_clock_compress(lt)

def lt_set_dict_compress(lt, minwidth):
    return _lxt.lt_set_dict_compress(lt, minwidth)

def lt_set_initial_value(lt, value):
    return _lxt.lt_set_initial_value(lt, value)

def lt_set_timescale(lt, timescale):
    return _lxt.lt_set_timescale(lt, timescale)

def lt_set_time(lt, timeval):
    return _lxt.lt_set_time(lt, timeval)

def lt_inc_time_by_delta(lt, timeval):
    return _lxt.lt_inc_time_by_delta(lt, timeval)

def lt_set_time64(lt, timeval):
    return _lxt.lt_set_time64(lt, timeval)

def lt_inc_time_by_delta64(lt, timeval):
    return _lxt.lt_inc_time_by_delta64(lt, timeval)

def lt_set_dumpoff(lt):
    return _lxt.lt_set_dumpoff(lt)

def lt_set_dumpon(lt):
    return _lxt.lt_set_dumpon(lt)

def lt_emit_value_int(lt, s, row, value):
    return _lxt.lt_emit_value_int(lt, s, row, value)

def lt_emit_value_double(lt, s, row, value):
    return _lxt.lt_emit_value_double(lt, s, row, value)

def lt_emit_value_string(lt, s, row, value):
    return _lxt.lt_emit_value_string(lt, s, row, value)

def lt_emit_value_bit_string(lt, s, row, value):
    return _lxt.lt_emit_value_bit_string(lt, s, row, value)

